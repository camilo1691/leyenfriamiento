import sys, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..')))

import streamlit as st
import pandas as pd
from app.simulacion.solucion_rk4 import ejecutar_simulacion
from app.visualizacion.graficador import graficar_resultados

# Aqu√≠ configuro la p√°gina de Streamlit con un t√≠tulo, un √≠cono y un dise√±o centrado
st.set_page_config(page_title="Simulador Ley de Enfriamiento", page_icon="üå°Ô∏è", layout="centered")

# En esta l√≠nea muestro el t√≠tulo principal del simulador en la interfaz
st.title(" Simulador de la Ley de Enfriamiento de Newton")

# Aqu√≠ le doy al usuario la opci√≥n de escoger c√≥mo quiere ingresar los datos: manualmente o desde un archivo CSV
modo = st.radio("Selecciona el modo de ingreso de datos:", ["Manual", "Archivo CSV"])

# --- Modo de ingreso manual ---
if modo == "Manual":
    # En esta secci√≥n creo los campos para que el usuario ingrese los valores de forma manual
    st.subheader(" Ingreso manual de par√°metros")
    
    # Aqu√≠ capturo la temperatura inicial del cuerpo
    T0 = st.number_input("Temperatura inicial (¬∞C):", value=90.0)
    
    # En esta l√≠nea permito ingresar la constante de enfriamiento
    k = st.number_input("Constante de enfriamiento (k):", value=-0.05)
    
    # Aqu√≠ pido la duraci√≥n total del proceso en horas
    t_total = st.number_input("Duraci√≥n (horas):", value=5.0)
    
    # En esta l√≠nea capturo la temperatura ambiente
    Tamb = st.number_input("Temperatura ambiente (¬∞C):", value=25.0)
    
    # Indico que en este modo no se cargan datos desde archivo
    datos = None

# --- Modo de ingreso desde archivo CSV ---
else:
    # Aqu√≠ muestro la opci√≥n para cargar un archivo CSV con datos de temperatura
    st.subheader(" Cargar archivo CSV de temperaturas ambientales")
    
    # En esta l√≠nea permito que el usuario seleccione el archivo CSV
    archivo = st.file_uploader("Selecciona tu archivo CSV", type=["csv"])
    
    # Si el usuario carga correctamente un archivo, lo leo y lo muestro
    if archivo is not None:
        datos = pd.read_csv(archivo)
        st.success(" Archivo cargado correctamente")
        st.dataframe(datos.head())
    
    # Si no se ha cargado ning√∫n archivo, muestro una advertencia
    else:
        st.warning("Por favor, carga un archivo CSV para continuar.")
        datos = None
    
    # En este caso las variables del modo manual no se usan
    T0 = k = t_total = Tamb = None

# --- Ejecuci√≥n de la simulaci√≥n ---
if st.button(" Ejecutar simulaci√≥n"):
    # Cuando el usuario presiona el bot√≥n, informo que la simulaci√≥n est√° en proceso
    st.info("Ejecutando simulaci√≥n...")

    # Aqu√≠ llamo a la funci√≥n que realiza la simulaci√≥n usando el m√©todo RK4 con los datos ingresados
    resultados = ejecutar_simulacion(
        T0=T0, k=k, t_total=t_total, Tamb=Tamb, datos=datos
    )

    # Muestro un mensaje indicando que la simulaci√≥n termin√≥ correctamente
    st.success(" Simulaci√≥n completada")
    
    # Finalmente, llamo a la funci√≥n que genera y muestra la gr√°fica con los resultados obtenidos
    graficar_resultados(resultados)